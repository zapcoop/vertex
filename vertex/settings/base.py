"""
Django settings for noss project.

Generated by 'django-admin startproject' using Django 1.8.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import datetime
import os

from django.core.exceptions import ImproperlyConfigured
from django.utils.translation import ugettext_lazy as _, gettext


def get_env_variable(var_name):
    """Get the environment variable or raise exception. Borrowed from 2scoops."""
    try:
        return os.environ[var_name]
    except KeyError:
        error_msg = "Set the {} environment variable".format(var_name)
        raise ImproperlyConfigured(error_msg)


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

AUTHENTICATION_BACKENDS = (
    'noss.rules.permissions.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',  # default
)

# SESSION_ENGINE = 'user_sessions.backends.db'

# Application definition

INSTALLED_APPS = (
    'django.contrib.auth',
    'modeltranslation',  # needs to be before admin
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.gis',

    'rules.apps.AutodiscoverRulesConfig',
    'rest_framework',
    'corsheaders',

    'reversion',
    'polymorphic',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'django_fsm',

    'netfields',
    'django_mailbox',
    'markdown_deux',

    'contacts',
    'contracts',
    'service',
    'ipam',
    'email_dispatch',
    'dns',
    'tags',
    'labels',
    'noss',
)

MIDDLEWARE_CLASSES = (
    'reversion.middleware.RevisionMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'noss.middleware.JWTOTPAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django_downloadview.SmartDownloadMiddleware'
)

ROOT_URLCONF = 'noss.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(os.path.dirname(__file__), '..', '..', 'templates').replace('\\', '/'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'noss.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'OVERRIDE THIS SETTING!',
        'TIMEOUT': None,
        'OPTIONS': {
            'PARSER_CLASS': 'redis.connection.HiredisParser',
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    },
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGES = (
    ('en', _('English')),
    ('fr', _('French')),
)

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Additional locations of static files
STATICFILES_DIRS = (
)

REST_FRAMEWORK = {
    'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
    # DRF v3.1+
    'DEFAULT_PAGINATION_CLASS':
        'noss.api.pagination.NossPageNumberPagination',
    # 'rest_framework.pagination.PageNumberPagination',
    # older than DRF v3.1
    # 'DEFAULT_PAGINATION_SERIALIZER_CLASS':
    # 'rest_framework_json_api.pagination.PaginationSerializer',
    # 'rest_framework.pagination.PaginationSerializer',
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework_json_api.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'noss.api.renderers.BindingJSONAPIRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.AdminRenderer',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoObjectPermissions'
    ],
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_filters.backends.DjangoFilterBackend', 'rest_framework.filters.OrderingFilter'
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'noss.api.authentication.OTPJSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}

JSON_API_FORMAT_KEYS = 'underscore'
JSON_API_FORMAT_RELATION_KEYS = 'underscore'

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=300),
    'JWT_ALGORITHM': 'HS512',
    'JWT_PAYLOAD_HANDLER':
        'noss.api.utils.jwt_payload_handler',
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
}

ANONYMOUS_USER_ID = -1

TICKET_NOTE_ALLOW_EDIT_DURATION = 300  # in seconds
TICKET_UPDATE_ALLOW_EDIT_DURATION = 300

# CORS settings
CORS_ORIGIN_ALLOW_ALL = True
CORS_PREFLIGHT_MAX_AGE = 3600

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

APPEND_SLASH = False

# Celery settings
from kombu import Queue, Exchange

BROKER_URL = 'OVERRIDE THIS VALUE!'
CELERY_ACCEPT_CONTENT = ['msgpack']
CELERY_RESULT_BACKEND = 'rpc'
CELERY_RESULT_SERIALIZER = 'msgpack'
CELERY_TASK_SERIALIZER = 'msgpack'

CELERY_CREATE_MISSING_QUEUES = False
CELERY_QUEUES = (
    Queue('noss', routing_key='noss'),
    # Queue('email_serializer', routing_key='email_serializer'),
    Queue('dns_notify', Exchange('dns_notify', type='direct'), routing_key='dns_notify')
)

CELERY_ROUTERS = (
    {
        'dns.tasks.add_zone': {'queue': 'dns_notify'},
        'dns.tasks.remove_zone': {'queue': 'dns_notify'},
        'dns.tasks.process_changes': {'queue': 'dns_notify'},
    },
)

CELERY_DEFAULT_ROUTING_KEY = 'noss'
CELERY_DEFAULT_QUEUE = 'noss'
CELERY_DEFAULT_EXCHANGE = 'noss'
CELERY_DEFAULT_EXCHANGE_TYPE = 'direct'
CELERY_ENABLE_UTC = True

AUTOSLUG_MODELTRANSLATION_ENABLE = False

MEDIA_ROOT = '/opt/boss/media/'
MEDIA_URL = '/files/'

DOWNLOADVIEW_BACKEND = 'django_downloadview.nginx.XAccelRedirectMiddleware'
DOWNLOADVIEW_RULES = [
    {
        'source_url': '/files/',
        'destination_url': '/nginx-optimized/',
    },
]

WS_EXCHANGE = 'ws'
WS_AMQP_CONNECTION = {'host': 'localhost',
                      'userid': 'guess',
                      'password': 'guest',
                      'virtual_host': 'noss'}
JWT_PAYLOAD_USERID_KEY = 'uid'
JWT_PAYLOAD_WSID_KEY = 'wsid'

MODELTRANSLATION_AUTO_POPULATE = 'all'
