# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-11-21 21:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contacts', '0001_initial'),
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, null=True, verbose_name='modified at')),
                ('asset_tag', models.SlugField(editable=False, max_length=8, unique=True, verbose_name='Asset tag')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='Serial number')),
                ('active', models.BooleanField(default=True)),
                ('assigned_to', models.ManyToManyField(blank=True, related_name='items', to='contacts.Organization', verbose_name='Assigned to')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'ordering': ['asset_tag'],
            },
        ),
        migrations.CreateModel(
            name='AssetGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('assets', models.ManyToManyField(blank=True, related_name='asset_group', to='inventory.Asset', verbose_name='Assets')),
            ],
            options={
                'verbose_name': 'Asset group',
                'verbose_name_plural': 'Asset groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AssetState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Asset', verbose_name='Asset')),
            ],
            options={
                'verbose_name': 'Asset state',
                'verbose_name_plural': 'Asset states',
            },
        ),
        migrations.CreateModel(
            name='InventoryCheckPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date & time')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryCPQty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('check_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.InventoryCheckPoint', verbose_name='Check point')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Stockroom transaction',
                'verbose_name_plural': 'Stockroom transactions',
                'ordering': ['-date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, null=True, verbose_name='modified at')),
                ('model', models.CharField(max_length=50)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('part_number', models.CharField(blank=True, help_text='Discrete part number (optional)', max_length=50)),
                ('description', models.CharField(blank=True, max_length=64, verbose_name='Description')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('built_to_order', models.BooleanField(default=False)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='item_templates', to='contacts.Manufacturer')),
                ('suppliers', models.ManyToManyField(blank=True, to='contacts.HardwareSupplier', verbose_name='Suppliers')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['manufacturer', 'model'],
            },
        ),
        migrations.CreateModel(
            name='ItemParts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, null=True, verbose_name='modified at')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='User defined ID')),
                ('issue_date', models.DateField(auto_now_add=True, verbose_name='Issue date')),
                ('required_date', models.DateField(blank=True, null=True, verbose_name='Date required')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('status', models.CharField(choices=[('NEW', 'New'), ('RELEASED', 'Released'), ('RECEIVED', 'Received'), ('CHANGED', 'Changed'), ('CANCELED', 'Canceled'), ('CLOSED', 'Closed')], max_length=10, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Purchase order',
                'verbose_name_plural': 'Purchase orders',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreed_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Agreed price')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('qty', models.PositiveIntegerField(verbose_name='Quantity')),
                ('received_qty', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='received')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item', verbose_name='Item')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.PurchaseOrder', verbose_name='Purchase order')),
            ],
            options={
                'verbose_name': 'Purchase order item',
                'verbose_name_plural': 'Purchase order items',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Purchase order item status',
                'verbose_name_plural': 'Purchase order item status',
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=32, verbose_name='User defined ID (optional)')),
                ('issue_date', models.DateField(auto_now_add=True, verbose_name='Issue date')),
                ('required_date', models.DateField(blank=True, null=True, verbose_name='Date required')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('status', models.CharField(choices=[('NEW', 'New'), ('RELEASED', 'Released'), ('RECEIVED', 'Received')], max_length=10, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_pr_set', to='inventory.PurchaseRequest')),
                ('supplier_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.EmailAddress')),
            ],
            options={
                'verbose_name': 'Purchase request',
                'verbose_name_plural': 'Purchase requests',
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequestItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(verbose_name='Quantity')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item', verbose_name='Item')),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.PurchaseRequest', verbose_name='Purchase request')),
            ],
            options={
                'verbose_name': 'Purchase request item',
                'verbose_name_plural': 'Purchase request items',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('exclusive', models.BooleanField(default=False, verbose_name='Exclusive')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='Stockroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.Place', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Stockroom',
                'verbose_name_plural': 'Stockrooms',
            },
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.PurchaseOrderItemStatus', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='purchase_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.PurchaseRequest', verbose_name='Purchase request'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='contacts.HardwareSupplier', verbose_name='Supplier'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='stockroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.Stockroom', verbose_name='Stockroom'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='supply',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item', verbose_name='Supply'),
        ),
        migrations.AddField(
            model_name='inventorycpqty',
            name='supply',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item', verbose_name='Supply'),
        ),
        migrations.AddField(
            model_name='inventorycheckpoint',
            name='stockroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Stockroom', verbose_name='Stockroom'),
        ),
        migrations.AddField(
            model_name='inventorycheckpoint',
            name='supplies',
            field=models.ManyToManyField(blank=True, through='inventory.InventoryCPQty', to='inventory.Item', verbose_name='Supplies'),
        ),
        migrations.AddField(
            model_name='assetstate',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.State', verbose_name='State'),
        ),
        migrations.AddField(
            model_name='asset',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='inventory.Item', verbose_name='Base item'),
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='places.Place', verbose_name='General location'),
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('inventory.item',),
        ),
        migrations.AddField(
            model_name='itemparts',
            name='part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_by', to='inventory.Part'),
        ),
        migrations.AddField(
            model_name='item',
            name='parts',
            field=models.ManyToManyField(blank=True, through='inventory.ItemParts', to='inventory.Part', verbose_name='Requires'),
        ),
        migrations.AlterUniqueTogether(
            name='asset',
            unique_together=set([('item', 'serial_number')]),
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together=set([('manufacturer', 'model')]),
        ),
    ]
